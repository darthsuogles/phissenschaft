interp.load.ivy("edu.stanford.nlp" % "stanford-corenlp" % "3.7.0")

import $exec.croquis.LibFPath, FPath.Implicits._

val dataRootFP = FPath.home / "local" / "data"
def loadJars(jars: Seq[String]): Unit = {
  import ammonite.ops
  jars.foreach { jarStr =>
    interp.load.cp(ops.Path((dataRootFP / jarStr).fp.toString))
  }
}
loadJars(Seq("stanford-corenlp-3.7.0-models-english.jar"))

import edu.stanford.nlp.pipeline._

val props = new java.util.Properties()
props.setProperty("annotators", "tokenize, ssplit, pos, lemma, ner, parse, dcoref");
val pipeline = new StanfordCoreNLP(props);
val annotDoc = new Annotation("able was I ere I saw elba")
pipeline.annotate(annotDoc)

import edu.stanford.nlp.ling.CoreAnnotations._
import scala.collection.JavaConverters._
val sents = annotDoc.get(classOf[SentencesAnnotation]).asScala
val toks = sents.head.get(classOf[TokensAnnotation]).asScala
toks.zipWithIndex.foreach { case (tok, idx) =>
  val word = tok.get(classOf[TextAnnotation])
  val pos = tok.get(classOf[PartOfSpeechAnnotation])
  val ent = tok.get(classOf[NamedEntityTagAnnotation])
  println(f"${idx}% 3d: ${word}%16s :: ${pos}%5s :: ${ent}%7s")
}
