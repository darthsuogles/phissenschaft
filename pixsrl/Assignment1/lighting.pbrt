
#
# The following lines define the size of the output image and the name of
# of the file containing the result of rendering
#
Film "image" "string filename" ["lighting.exr"]
	"integer xresolution" [300] "integer yresolution" [300]

#
# Sampling specification: PBRT will shoot 4 samples rays per pixel.
# Increasing the number of samples per pixel will increase image quality
# at the cost of increased rendering time.  Feel free to crank this value
# up in your final images.
#

Sampler "halton" "integer pixelsamples" [128]

#
# Integrator specification: PBRT will compute a single bounce of light.
# Increasing maxdepth increases the bounces of light computed, and will
# drastically increase the noise of the final image. To decrease noise,
# increase the pixelsamples of the sampler above
#
Integrator "path" "integer maxdepth" [5]

#
# Camera configuration: the camera is located on the Z axis, and is
# pointed at the center of the scene
#
LookAt -1.5 0 4.5  0 0 0   0 1 0
Camera "perspective" "float fov" [22]

WorldBegin

#
# light source configuration:  The next region of the pbrt scene file
# defines the light sources that illuminate the scene.  Currently the
# scene is illuminated by a single spotlight source
#
#
# Spotlight source with 60 degree cone angle pointed at the center of
# the scene
#

LightSource "spot" "color I" [15 15 15] "point from" [-2.5 0 1] "point to" [0 0 0] "float coneangle" [60]

LightSource "spot" "color I" [15 15 15] "point from" [2.5 0 1] "point to" [0 0 0] "float coneangle" [60]

LightSource "spot" "color I" [45 45 45] "point from" [2.5 7 5] "point to" [0 0 0] "float coneangle" [60]


#
# Arealight source: Currently commented out, but you will use area
# lights later in the project to create more complex lighting
# conditions.  In the definition below, the area light is specified to
# be a disk of radius 1.5. For each pixel in the scene 4 sample rays
# are shot toward points on the light source to determine shadowing.
#

# AttributeBegin
#   AreaLightSource "area" "color L" [10 10 10]
#   # use camera coordinate system (optional)
#   CoordSysTransform "camera"
#   # adjust light source position
#   Translate 0 0 -2
#   Rotate 90 1 0 0
#   # define the shape of the arealight to be a disk with radius 1.5
#   Shape "disk" "float radius" [1.5]
# AttributeEnd


# Environment map light source: Currently commented out, but you will use
# this later in the project to create even more complex lighting
# conditions. An HDR panorama is used to create an angularly varying
# light source shining into the scene from all directions

#LightSource "infinite" "string mapname" ["textures/doge2_latlong.exr"]

#
# The following sections define scene geometry and the material properties
#

#
# Backdrop
#

AttributeBegin
Material "matte" "color Kd" [0.8 0.8 0.8 ]
Translate 0 -5 0
Shape "trianglemesh" "integer indices" [ 0 1 2 2 0 3 ]
    "point P" [-10 0 -10   10 0 -10   10 9 -10   -10 9 -10 ]
AttributeEnd


#
# Head model
#

# Material "uber" "color Kd" [1 1 1 ] "color Ks" [0.05 0.05 .05]
# AttributeBegin
# Translate 0 -0.2 0
# Rotate 180 0 1 0
# Scale 0.1 0.1 0.1
# Include "head_model.pbrt"
# AttributeEnd

#
# More realistic head model
#

AttributeBegin
Translate 0 0.1 0.4
Scale 6.0 6.0 6.0
Texture "albedomap" "color" "imagemap"
       "string filename" ["textures/head_albedomap.png"]

# mfp = inverse sigma_t value of Jensen's skin1 parameters (in meters)
Material "kdsubsurface" "texture Kd" "albedomap"
  "float eta" [1.33] "color mfp" [1.2953e-03 9.5238e-04 6.7114e-04]
  "float uroughness" [0.05] "float vroughness" [0.05]
  "bool remaproughness" ["false"]

Shape "plymesh" "string filename" "geometry/head.ply"
AttributeEnd

WorldEnd
